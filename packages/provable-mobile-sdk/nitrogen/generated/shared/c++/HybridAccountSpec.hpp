///
/// HybridAccountSpec.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

// Forward declaration of `PrivateKey` to properly resolve imports.
namespace margelo::nitro::provable { struct PrivateKey; }
// Forward declaration of `Address` to properly resolve imports.
namespace margelo::nitro::provable { struct Address; }
// Forward declaration of `ViewKey` to properly resolve imports.
namespace margelo::nitro::provable { struct ViewKey; }

#include "PrivateKey.hpp"
#include <string>
#include "Address.hpp"
#include "ViewKey.hpp"

namespace margelo::nitro::provable {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `Account`
   * Inherit this class to create instances of `HybridAccountSpec` in C++.
   * You must explicitly call `HybridObject`'s constructor yourself, because it is virtual.
   * @example
   * ```cpp
   * class HybridAccount: public HybridAccountSpec {
   * public:
   *   HybridAccount(...): HybridObject(TAG) { ... }
   *   // ...
   * };
   * ```
   */
  class HybridAccountSpec: public virtual HybridObject {
    public:
      // Constructor
      explicit HybridAccountSpec(): HybridObject(TAG) { }

      // Destructor
      ~HybridAccountSpec() override = default;

    public:
      // Properties
      

    public:
      // Methods
      virtual PrivateKey createPrivateKey() = 0;
      virtual PrivateKey privateKeyFromString(const std::string& privateKey) = 0;
      virtual Address addressFromString(const std::string& address) = 0;
      virtual ViewKey viewKeyFromString(const std::string& viewKey) = 0;
      virtual Address addressFromPrivateKey(const PrivateKey& privateKey) = 0;
      virtual ViewKey viewKeyFromPrivateKey(const PrivateKey& privateKey) = 0;
      virtual Address addressFromViewKey(const ViewKey& viewKey) = 0;

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "Account";
  };

} // namespace margelo::nitro::provable
